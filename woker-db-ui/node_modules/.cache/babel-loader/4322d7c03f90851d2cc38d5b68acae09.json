{"ast":null,"code":"import myAxios from \"./myAxios\";\nimport { Buffer } from \"buffer\";\nconst userName = \"restUser\";\nconst userPassword = \"restPassword\";\nconst usersURL = 'http://localhost:8080/workers';\n\nclass UserService {\n  getUsers() {\n    return axios.get(usersURL, {\n      auth: {\n        username: userName,\n        password: userPassword\n      },\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\n    });\n  }\n\n  deleteUser(id) {\n    axios.delete(usersURL + \"/\" + id, {\n      auth: {\n        username: userName,\n        password: userPassword\n      },\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\n    });\n  }\n\n  postUser(name, position) {\n    axios.post(usersURL + \"?name=\" + name + \"&position=\" + position, {\n      auth: {\n        username: userName,\n        password: userPassword\n      },\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\n    });\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["C:/Users/student/Desktop/Full stack worker db/woker-db-ui/src/services/UserService.js"],"names":["myAxios","Buffer","userName","userPassword","usersURL","UserService","getUsers","axios","get","auth","username","password","deleteUser","id","delete","postUser","name","position","post"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,QAAQ,GAAG,+BAAjB;;AAEA,MAAMC,WAAN,CAAkB;AAChBC,EAAAA,QAAQ,GAAG;AACT,WAAOC,KAAK,CAACC,GAAN,CAAUJ,QAAV,EAAoB;AACzBK,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAER,QADN;AAEJS,QAAAA,QAAQ,EAAER;AAFN,OADmB;AAKzB,qCAA+B,GALN;AAMzB,sCAAgC;AANP,KAApB,CAAP;AAQD;;AAEDS,EAAAA,UAAU,CAACC,EAAD,EAAK;AACbN,IAAAA,KAAK,CAACO,MAAN,CAAcV,QAAQ,GAAG,GAAX,GAAiBS,EAA/B,EAAoC;AAClCJ,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAER,QADN;AAEJS,QAAAA,QAAQ,EAAER;AAFN,OAD4B;AAKlC,qCAA+B,GALG;AAMlC,sCAAgC;AANE,KAApC;AAQD;;AAEDY,EAAAA,QAAQ,CAACC,IAAD,EAAOC,QAAP,EAAiB;AACvBV,IAAAA,KAAK,CAACW,IAAN,CAAYd,QAAQ,GAAG,QAAX,GAAsBY,IAAtB,GAA6B,YAA7B,GAA4CC,QAAxD,EAAmE;AACjER,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAER,QADN;AAEJS,QAAAA,QAAQ,EAAER;AAFN,OAD2D;AAKjE,qCAA+B,GALkC;AAMjE,sCAAgC;AANiC,KAAnE;AAQD;;AAhCe;;AAmClB,eAAe,IAAIE,WAAJ,EAAf","sourcesContent":["import myAxios from \"./myAxios\";\r\nimport { Buffer } from \"buffer\";\r\n\r\nconst userName = \"restUser\";\r\nconst userPassword = \"restPassword\";\r\nconst usersURL = 'http://localhost:8080/workers';\r\n\r\nclass UserService {\r\n  getUsers() {\r\n    return axios.get(usersURL, {\r\n      auth: {\r\n        username: userName,\r\n        password: userPassword\r\n      },\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n    });\r\n  }\r\n\r\n  deleteUser(id) {\r\n    axios.delete((usersURL + \"/\" + id), {\r\n      auth: {\r\n        username: userName,\r\n        password: userPassword\r\n      },\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n    });\r\n  }\r\n\r\n  postUser(name, position) {\r\n    axios.post((usersURL + \"?name=\" + name + \"&position=\" + position), {\r\n      auth: {\r\n        username: userName,\r\n        password: userPassword\r\n      },\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS',\r\n    });\r\n  }\r\n}\r\n\r\nexport default new UserService();"]},"metadata":{},"sourceType":"module"}